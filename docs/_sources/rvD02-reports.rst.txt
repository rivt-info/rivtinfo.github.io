
**D.2 Reports**
================== 

.. raw:: html

    <p id="api">&lt;i&gt;</p>

**[1]** Files 
--------------------------------------------------------------------- 

.. raw:: html

    <hr>
    
.. topic:: Note: 

    In the file and folder examples below, brackets identify the required
    prefix for a file or folder name. 

**rivt files - input**

*rivt reports* are assembled using *doc numbers* that organize the report into
divisions and subdivisions. Each *rivt file* has a prefix that specifies the
division label and subdivision number of the published *doc*. The default
*subdivision* name is taken from the *rivt file* name that follows the *doc
number*. The file name may be overridden in the *API Meta function*. *Division*
names are specified in the :term:`report script`.

The *doc number* prefix includes a single digit capital alphanumeric division
label *D* followed by a two digit subdivision number *ss*. For example:

.. code-block:: bash
    
    [rvDss-]file-name.py
    
    rvC02-Beam-Loads.py

where the subdivision is 2 in division C and with the default doc name is "Beam
Loads"


**Run file - input**


**Insert file - input**


**Value file - input and output**

A *value file* is a *csv* file that defines variable values. They are imported
using the | VALUE | command in the *rv.V API function*. Values defined in a
_[[VALUES]] block and by equations are written to a file in the values
subfolder using the *doc* and *section* number. The file may be read by other
*rivt files*.

**Tool file - input**



**Doc file - output**

Each *rivt file* outputs a *doc file* with the same *doc name and number* and
the selected *doc type* suffix. *Doc* files are written to the *publish folder*
as text, PDF or HTML files.

**Report file - output**

A *report file* is generated by the Python *report script* and written to the
designated *publish folder*. The *report file* is taken from the *report
folder* unless specified in the *report script*.

**Log file - ouput**

*Log files* are written to the *log folder*. They include a backup of the rivt
file, a listing of the execution steps when processing the *rivt file*, and a
separate file listing each API function call.

.. raw:: html

    <p id="api">&lt;i&gt;</p>

**[2]** Folders
--------------------------------------------------------------------- 

.. raw:: html

    <hr>

The *rivt report folder* organizes files that generate *docs* and *reports*.
The report folder structure is shown :doc:`here<rvD03-folders>`


.. raw:: html

    <p id="api">&lt;i&gt;</p>

**[3]** Reports
----------------------------------------------------------

.. raw:: html

    <hr>

A :term:`report` is assembled from *docs*. Each :term:`rivt file` compiles to 
a *doc* organized by division and subdivision specified by .

A typical workflow for writing *reports* is to start with a similar *report*
and then edit the *rivt files* to produce new *docs*.

A *report* is generated by running a Python report script with settings
that specify assembly parameters and override defaults. One setting
provides the option to either regenerate all *docs* or to
assemble the report from previously generated *docs*.  Most aspects of
the *report* appearance are determined at when generating *docs*.

An example script is shown below.

.. code-block:: python

    #! python

    from rivtlib.rvreport import *  # noqa: F403

    """ generate a rivt report

    Sample report generating and config file. The report generating file must
    located in rivtdocs/reports/. The report output file is written to the same
    folder. Duplicate report file names are incremented, not overwritten. 

    Run this Python file to generate a rivt report. Copy and rename the file to
    save custom report settings. See rivtdocs/styles/rivt.ini for additional
    settings.

    A flag determines whether the report is assembled from existing doc files or
    whether docs are regenerated prior to assembly. (see "report type and paths"
    below). If a rivt or doc file is specified for inclusion and not found a
    warning is given but the report is still assembled.

    A rivt report organizes rivt folders into divisions, and rivt doc files as
    subdivisions. rivt doc numbers define this structure. Default titles for
    subdivisions and divisions are generated by stripping the doc or div number
    from the file or folder name and replacing underscores with spaces. The default
    titles may be overridden (see "optional rename" below). """

    # ==================================
    # report type
    # ==================================
    rptype = "rstpdf"  # report type [html; rstpdf; texpdf; text]
    rvrun = False  # regenerate docs [True; False]

    # ==================================
    # report cover settings
    # ==================================
    # cover pages are located in rivtdocs/styles
    rptitle = "Solar Canopy Calculations"
    rpsubtitle = "Larkspur, Ca"
    rpauthor = "rhh"
    rpdate = "<datetime>"
    rptoc = True  # add table of contents, "" to omit
    rpcover = "cover1.pdf"  # cover page [name.rst; name.pdf], "" to omit

    # ==================================
    # include docs / rename titles
    # ==================================
    # include these divisions in report
    dv01 = "Codes and Loads"  # override division title
    dv02 = ""  # use default division title from folder name
    dv03 = "Foundation"

    # include these docs in report
    rv0101 = "Codes"  # override doc (subdivision) title in report
    rv0102 = ""  # use default subdivision title from file name
    rv0201 = "Steel Frame"
    rv0202 = "Solar Panels"
    rv0301 = "Slab"
    rv0302 = "Walls"

    genreport()  # noqa: F405

