**D.1** - Documents 
========================

*rivt files* are typically stored in *division* folders unless they are *single
docs*. *Reports* are assembled from and written to files in the *report* folder
which has the top level structure of:

.. code-block:: bash
 
    [rivt]-Report-Label/              Report Folder 
        ├── [dv01-]divlabel/          division folder 
        ├── [dv02-]divlabel/          division folder
        
        ...

        ├── [public]/                 public rivt files
        ├── [report]/                reports and docs
        ├── [source]/                 source files      
        └── README.txt                text report 


*rivt files* are processed sequentially. Calculated values and programatically
generated objects can be passed between files. Sources used in a *doc* are read
from the *source* folder. Further explanation of the *report folder* is 
:doc:`here </dv04-reports/rv02-folders>`

PDF files are produced in two ways, referred to as *rpdf* and *tpdf*. An *rpdf*
doc is formatted using the *rst2pdf* library, a susbset of the larger
*ReportLab* library. It is the default *rivt PDF doc*. Its advantage is a much
smaller required library compared to other PDF libraries. A *rivt LaTeX doc*
(*tpdf*) requires separate installation of the large texlive LaTeX library (~
2GB). Its advantage is additional control over *doc* formatting and appearance.


**[01]** Single Docs

For a simple document that will not be part of a report, a *single doc* may
also be published using only the local folder, without reference to the project
folder. In this case all of the files are read from and written to the same
folder as the *rivt file*. 

A *single doc* is published by including the following:

#. The *command* path is specified with the alias *rvlocal*.
#. For the *Value* API function (*rv.V*) add *rvlocal* to header parameters. 
   Separate parameters with a comma.
#. Ensure that *doc* source files are in the local folder.

Any *rivt file* can be converted to a *single doc* using the above steps. The
text, PDF and HTML *docs* will be written to the local file using standard
format settings built into *rivtlib*. 

*Single docs* provide less formatting control but require less setup and are
useful for quick *doc* production.

**[02]** Reports

*Reports* are assembled from *docs* produced by *rivt files* - each *rivt file*
produces one *doc*. Each *doc* is a *subdivision* of a report.

A typical workflow for writing *reports* is to start with a similar *report*
and then edit it file by file to produce the group of *docs* needed for the
*report*.

The *report* is generated by editing and running a Python script with settings
that specify *doc* assembly parameters and default overrides. A setting is
provided to either regenerate all *docs* before *report* assembly or to
assemble from previously generated *docs*. The *report* is assembled and
written to a subfolder that depends on the specified format of the report.

A typical report generating script is shown below. Many aspects of
the *report* appearance are determined at the *doc* generating level.

.. code-block:: python

    #! python

    from rivtlib.rvreport import *  # noqa: F403

    """ generate a rivt report

    Sample report generating and config file. The report generating file must
    located in rivtdocs/reports/. The report output file is written to the same
    folder. Duplicate report file names are incremented, not overwritten. 

    Run this Python file to generate a rivt report. Copy and rename the file to
    save custom report settings. See rivtdocs/styles/rivt.ini for additional
    settings.

    A flag determines whether the report is assembled from existing doc files or
    whether docs are regenerated prior to assembly. (see "report type and paths"
    below). If a rivt or doc file is specified for inclusion and not found a
    warning is given but the report is still assembled.

    A rivt report organizes rivt folders into divisions, and rivt doc files as
    subdivisions. rivt doc numbers define this structure. Default titles for
    subdivisions and divisions are generated by stripping the doc or div number
    from the file or folder name and replacing underscores with spaces. The default
    titles may be overridden (see "optional rename" below). """

    # ==================================
    # report type
    # ==================================
    rptype = "rstpdf"  # report type [html; rstpdf; texpdf; text]
    rvrun = False  # regenerate docs [True; False]

    # ==================================
    # report cover settings
    # ==================================
    # cover pages are located in rivtdocs/styles
    rptitle = "Solar Canopy Calculations"
    rpsubtitle = "Larkspur, Ca"
    rpauthor = "rhh"
    rpdate = "<datetime>"
    rptoc = True  # add table of contents, "" to omit
    rpcover = "cover1.pdf"  # cover page [name.rst; name.pdf], "" to omit

    # ==================================
    # include docs / rename titles
    # ==================================
    # include these divisions in report
    dv01 = "Codes and Loads"  # override division title
    dv02 = ""  # use default division title from folder name
    dv03 = "Foundation"

    # include these docs in report
    rv0101 = "Codes"  # override doc (subdivision) title in report
    rv0102 = ""  # use default subdivision title from file name
    rv0201 = "Steel Frame"
    rv0202 = "Solar Panels"
    rv0301 = "Slab"
    rv0302 = "Walls"

    genreport()  # noqa: F405






