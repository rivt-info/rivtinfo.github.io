
Edit
====

A **rivt** file is a Python file (utf-8 ) with the import statement

*import rivtlib.rivtapi as rv*

which provides four primary API functions and formatting commands and tags.
The API functions take a triple quoted string as the argument.

When running in an IDE (e.g. VSCode) the file may be executed interactively.
Interactive output is formatted as utf-8 text for speed and compatiblility. API
functions may be grouped and executed step-wise using the standard cell
decorator *# %%*. Document and report files are generated by the functions
*rv.write_public()* and *rv.write_private()* which output files in GitHub
Flavored Markdown (GFM) and PDF.

=========== ============ =========================
API         Name          Purpose
----------- ------------ -------------------------
**rv.R**    Run           Run external programs
**rv.I**    Insert        Insert static resources 
**rv.V**    Value         Calculate values
**rv.T**    Tool          Python functions
**rv.W**    Write         Write docs and reports
=========== ============ =========================

Each API function defines a document section. The first line of each function
includes a section label that can be a section title, followed by formatting
parameters. New sections may be suppressed by prepending a double hyphen to the
label.

The section body can contain any utf-8 text. Commands and tags applicable to
each function are defined [here](#commands) and [here](#tags).

The API function names start in column one. All other content is indented 4
spaces to facilitate section folding, bookmarking and legibility. API functions
can be written in any order and frequency except for *rivtinit*, which occurs
only once as the initial function in the file. A **rivt** file is a Python file
that follows pep8 and ruff conventions.

**rivt** markup uses a syntax of commands for file operations and tags for text
formatting. Any text not defined with commands or tags is passed through as
output. Commands and tags are processed in part by the *docutils* library and 
[restructuredText](https://docutils.sourceforge.io/docs/user/rst/quickref.html).


Commands
--------

Commands read and write external files. They are start with double vertical
bars (||) at the beginning of a line. Command parameters are separated by a
single bar (|).

In the summary tables below, exclusive options are separated with semi-colons.
List elements are separated with commas with options in paranthesis.

File locations are specified using relative paths based on the rivt
folder structure. Folder organization is described `here <5-folders.html>`_.


=========== =============================================== ===================  
Scope                       Command                           File options
----------- ----------------------------------------------- -------------------
rv.I        || **append** | rel. pth | num; nonum            .pdf, .xls, .doc
rv.I        || **text** | rel. pth |  wrap; nowrap           .rvt, .txt, .tex
rv.I, rv.V  || **image**  | rel. pth (,p2) | size1 (,s2)     .png, .jpg
rv.I, rv.V  || **table** | rel. pth | col width, l;c;r       .csv, .rst, .xls
rv.V        || **assign** | rel. pth | table; notable        .csv
rv.V        || **eval** | rel. pth | label; nolabel          .csv
rv.W        || **write** | docs; rel. pth | pdf; txt; html   .pdf, .txt, .html
rv.W        || **report** | docs; rel. pth | pdf; txt; html  .pdf, .txt, .html
=========== =============================================== ===================

Tags
----

**Line tags** format a line of text denoted with *_[tag]* at the end of a line.
**Value tags** trigger evaluation of mathmatical statements in the rv.V
function. **Block tags** format a multi-line block of text. They start with
_[[tag]] and end with _[[q]].

================ ======================= ===================================
Scope             Line Tag                    Description
---------------- ----------------------- -----------------------------------
rv.I, rv.V        text **_[c]**             center text
rv.I, rv.V        text **_[r]**             right justify text
rv.I, rv.V        equation **_[s]**         format Python (sympy) math 
rv.I, rv.V        label **_[e]**            label and autonumber equation
rv.I, rv.V        label **_[f]**            label and autonumber figure
rv.I, rv.V        label **_[t]**            label and autonumber table
rv.I, rv.V        text **_[#]**             autonumber footnote
rv.I, rv.V        descrip **_[d]**          footnote description
rv.I, rv.V        **_[address, label]**     url, internal reference
rv.I, rv.V        **_[page]**               new page
================ ======================= ===================================

-----------------------------------------------------------------------------

========== =============== ===============================
Scope        Block Tag         Description
---------- --------------- -------------------------------
rv.V        title _[[a]]     start assign value block
rv.I        **_[[b]]**       start bold text block
rv.I        **_[[c]]**       start center text block
rv.I        **_[[i]]**       start italic text block
rv.I        **_[[ib]]**      start bold indent text block
rv.I        **_[[ii]]**      start italic indent block
rv.I        **_[[l]]**       start latex block
rv.I        **_[[p]]**       start plain text block
rv.I        **_[[q]]**       end block
========== =============== ===============================

----------------------------------------------------------------------------

======= =========== ========================================================  
Scope    Value Tag                   Example
------- ----------- --------------------------------------------------------
rv.V     **:=**       b := 112.5*LBF | description (declare)    
rv.V     **=**        a = (2*IN + 3*IN)*b | description  (assign)   
======= =========== ========================================================  


Tag and Command Examples
--------------------------


::

    rv.R("""run function label | priv; pub | win; linux; osx
    
        The Run function processes shell commands.
        
        | run |
        
        | capture | 
        
        | edit |
        
        """)
    
    
    rv.I("""Insert Function Label | priv; pub | color; none
                            
        The Insert function formats static file objects including equations,
        images, tables and text.
                
        | append label | /append/path/.pdf | number; nonumber       
    
        | equation label (_[s,l]) | /text/path/.tex;txt(:start-end) | bold; plain
        
        | image label (_[i]) | /image/path/.jpg;.png;.svg | size, color
    
        | table title (_[t]) | /tables/path/.csv;.xls (:start-end) | width, align
    
        | text label | /text/path/.txt(:start-end) | plain; rivt
    
        """)
    
    
    rv.V("""Values Function Label | priv; pub | color; none
                
        The Values function evaluates lookup tables, variables and equations
        from files.
    
        | image label (_[i])| /image/path/.jpg;.png;.svg | size, color
    
        | table title (_[t])| /tables/path/.csv;.xls (:start-end) | [cols]
    
        | value label (_[v])| /values/path/.csv(:start-end) | 
    
        | equation label (_[e]) | /values/path/.txt(:start-end) | ref; noref
    
        """)
      
    
    rv.T("""Tools function label | priv; pub | color; none
    
            # The Tools function executes Python methods.
                    

        """)
    
    
    rv.X(""" label  | priv; pub  | color;none
    
        The X function prevents evaluation of the function. Any API function
        may be changed to X for flow control, testing, debugging and comments.
    
        """)
    
    rv.W("""Write function label | priv; pub | color; none
    
        The Write function generates a formatted doc file from a rivt file as
        text, HTML and PDF. It generates reports based on config file settings
        as README.txt, HTML and PDF.
    
        | output
        
        | files
    
        """)

